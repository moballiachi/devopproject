name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - testing

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: 'sa-east-1'
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ENVIRONMENT_NAME: ${{ github.ref_name == 'develop' && 'Develop' || 'Testing' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t env-webapp .

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: env-webapp
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag env-webapp:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Register ECS task definition
        run: |
          aws ecs register-task-definition \
            --family env-webapp-task-definition \
            --network-mode awsvpc \
            --requires-compatibilities FARGATE \
            --cpu "256" \
            --memory "512" \
            --execution-role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole \
            --container-definitions '[
              {
                "name": "env-webapp",
                "image": "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.sa-east-1.amazonaws.com/env-webapp:${{ github.sha }}",
                "portMappings": [
                  {
                    "containerPort": 8080,
                    "hostPort": 8080
                  }
                ],
                "essential": true,
                "environment": [
                  {
                    "name": "ENVIRONMENT_NAME",
                    "value": "${{ env.ENVIRONMENT_NAME }}"
                  }
                ]
              }
            ]'

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: env-webapp-cluster
          service: env-webapp-service
          task-definition: env-webapp-task
          codedeploy-application: env-webapp-codedeploy-app
          codedeploy-deployment-group: env-webapp-deployment-group
          codedeploy-deployment-description: Deploying ${GITHUB_SHA}
          wait-for-minutes: 5
