name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - testing

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ENVIRONMENT_NAME: ${{ if github.ref == 'refs/heads/develop' }}Develop${{ else }}Testing${{ endif }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t env-webapp .

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.AWS_REGION }}

      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: env-webapp
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag env-webapp:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: env-webapp-cluster
          service: env-webapp-service
          file: ecs-task-definition.json
          region: ${{ secrets.AWS_REGION }}
          image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          environment: ENVIRONMENT_NAME=${{ env.ENVIRONMENT_NAME }}

